{"version":3,"sources":["../src/components/nav/nav.tsx","../src/components/nav/navigation.tsx","../src/components/nav/nav-list.tsx","../src/components/nav/nav-brand.tsx","../src/components/layout/landmarks.tsx","../src/components/layout/page-main.tsx","../src/components/layout/page-header.tsx","../src/components/layout/pg.tsx","../src/components/layout/page-footer.tsx","../src/components/posts/post-list.tsx","../src/components/posts/article-list.tsx","../src/components/posts/page-list.tsx","../src/components/toc/toc.tsx"],"names":["Tag","Fragment","jsx","NavItem","route","styles","children","props","Nav","nav_default","Title","jsxs","getFolders","data","folders","obj","Navigation","brand","folder","Link","React","NavList","pages","item","NavBrand","url","logo","Header","Main","Footer","Aside","Section","Article","PageMain","sideBar","classes","Text","HeaderBase","DefaultHeader","title","link","linkLabel","description","PageHeader","PageFooter","orgName","copyInfo","PG","HeaderSection","MainSection","FooterSection","NavSection","PostsList","showDescription","elm","as","postList","Img","ArticleList","linkText","img","PageList","page","Toc","items","dataStyles","TocItems","depth","value","id"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Tag } from \"@fpkit/react\";\n\nexport type NavItemProps = {\n  route: string;\n  styles?: {};\n  children?: React.ReactNode;\n};\n\n/**\n * NavItem component creates a navigation link element wrapped in a list item `li`\n * @param param0\n * @returns\n */\nexport const NavItem = ({\n  route,\n  styles,\n  children,\n  ...props\n}: NavItemProps) => {\n  return (\n    <>\n      <Tag as=\"li\" styles={styles} {...props}>\n        <Tag as=\"a\" href={route} styles={{ textTransform: \"capitalize\" }}>\n          <>{children}</>\n        </Tag>\n      </Tag>\n    </>\n  );\n};\n\nexport type NavProps = {\n  children?: React.ReactNode;\n  styles?: {};\n};\n\n/**\n * Nav component creates a navigation element\n * @param param0\n * @returns\n */\nexport const Nav = ({ children, styles, ...props }: NavProps) => {\n  return (\n    <>\n      <Tag as=\"nav\" style={styles} {...props}>\n        <>{children}</>\n      </Tag>\n    </>\n  );\n};\n\n/**\n * Exports\n */\nexport default Nav;\nNav.displayName = \"Nav\";\n","import React from \"react\";\nimport { Tag, Title } from \"@fpkit/react\";\nimport Nav, { NavItem } from \"./nav\";\n\nimport { MdxFile, Folder, PageMapItem } from \"nextra\";\n\ntype Kind = \"Meta\" | \"MdxPage\" | \"Folder\";\n\ninterface Meta {\n  index: string;\n  another: string;\n  advanced: string;\n  about: {\n    title: string;\n    type: string;\n  };\n  contact: {\n    title: string;\n    type: string;\n    href: string;\n    newWindow: boolean;\n  };\n  kind: \"Meta\";\n}\n\ntype Data = (Meta | MdxFile | Folder | PageMapItem) & {\n  kind: Kind;\n};\n\nfunction getFolders(data: Data[]): Folder[] {\n  const folders: Folder[] = [];\n\n  data.forEach((obj) => {\n    if (obj.kind === \"Folder\") {\n      folders.push(obj);\n    }\n  });\n\n  return folders;\n}\n\nexport interface Brand {\n  brand?: {\n    url?: string;\n    logo?: React.ReactNode;\n  };\n}\n\ninterface NavbarProps extends Brand {\n  styles?: {};\n  data: Data[];\n}\n\nexport const Navigation: React.FC<NavbarProps> = ({ data, brand, styles }) => {\n  const folders = getFolders(data);\n\n  return (\n    <Nav styles={styles}>\n      {!!brand && (\n        <Tag as=\"div\">\n          <Title elm=\"h1\" styles={{ \"--fs\": \"1.2rem\" }}>\n            <Tag\n              as=\"a\"\n              href={brand.url}\n              styles={{ textTransform: \"capitalize\" }}\n            >\n              <>{brand.logo}</>\n            </Tag>\n          </Title>\n        </Tag>\n      )}\n\n      <Tag as=\"ul\">\n        {folders.map((folder) => (\n          <NavItem route={folder.route} key={folder.name}>\n            <>{folder.name}</>\n          </NavItem>\n        ))}\n      </Tag>\n    </Nav>\n  );\n};\n\nexport default Navigation;\n","import { MdxFile, FrontMatter } from \"nextra\";\nimport { Tag, Link } from \"@fpkit/react\";\nimport React from \"react\";\n\nexport type NavListTypes = {\n  pages?: MdxFile[];\n  styles?: {};\n} & FrontMatter;\n\nexport const NavList = ({ pages, styles, ...props }: NavListTypes) => {\n  if (!pages) return null;\n  return (\n    <Tag as=\"ul\" styles={styles} key={React.useId()} {...props}>\n      {pages?.map((item) => {\n        const { route } = item;\n        return (\n          <Tag as=\"li\" key={React.useId()}>\n            <Link href={route}>{item.frontMatter?.title}</Link>\n          </Tag>\n        );\n      })}\n    </Tag>\n  );\n};\n\nexport default NavList;\nNavList.displayName = \"NavList\";\n","import React from \"react\";\n\nimport { Tag, Title, Link } from \"@fpkit/react\";\n\nexport interface BrandTypes {\n  url: string;\n  logo: React.ReactNode;\n}\n\nexport const NavBrand = ({ url, logo }: BrandTypes) => {\n  return (\n    <Tag as=\"div\">\n      <Title elm=\"h1\" styles={{ \"--fs\": \"1.2rem\" }}>\n        <Link href={url} styles={{ textTransform: \"capitalize\" }}>\n          <>{logo}</>\n        </Link>\n      </Title>\n    </Tag>\n  );\n};\n\nexport default NavBrand;\n","import React from \"react\";\nimport { Tag } from \"@fpkit/react\";\nimport { LayoutProps } from \"nextra-theme-blog\";\n\n/**\n * Props for the Landmark components\n */\nexport interface LandmarkProps {\n  children: React.ReactNode;\n  styles?: {};\n}\n\n/**\n * Header component\n * @param styles - styles for the header\n * @param children - children of the header\n * @param props - additional props for the header\n * @returns a header element with children wrapped in a section element\n */\nexport const Header = ({ styles, children, ...props }: LandmarkProps) => {\n  return (\n    <Tag as=\"header\" styles={styles} {...props}>\n      <Tag as=\"section\">\n        <>{children}</>\n      </Tag>\n    </Tag>\n  );\n};\n\n/**\n * Main component\n * @param styles - styles for the main element\n * @param children - children of the main element\n * @param props - additional props for the main element\n * @returns a main element with children\n */\nexport const Main = ({\n  children,\n  styles = { minHeight: \"40vh\" },\n  ...props\n}: LandmarkProps) => {\n  return (\n    <Tag as=\"main\" styles={styles} {...props}>\n      <>{children}</>\n    </Tag>\n  );\n};\n\n/**\n * Footer component\n * @param styles - styles for the footer element\n * @param children - children of the footer element\n * @param props - additional props for the footer element\n * @returns a footer element with children wrapped in a section element\n */\nexport const Footer = ({ children, styles, ...props }: LandmarkProps) => {\n  return (\n    <Tag as=\"footer\" {...props} styles={styles}>\n      <Tag as=\"section\">\n        <>{children}</>\n      </Tag>\n    </Tag>\n  );\n};\n\n/**\n * Aside component\n * @param styles - styles for the aside element\n * @param children - children of the aside element\n * @param props - additional props for the aside element\n * @returns an aside element with children wrapped in a section element\n */\nexport const Aside = ({ children, styles, ...props }: LandmarkProps) => {\n  return (\n    <Tag as=\"aside\" styles={styles} {...props}>\n      <>{children}</>\n    </Tag>\n  );\n};\n\n/**\n * Section component\n * @param styles - styles for the section element\n * @param children - children of the section element\n * @param props - additional props for the section element\n * @returns a section element with children\n */\nexport const Section = ({ children, styles, ...props }: LandmarkProps) => {\n  return (\n    <Tag as=\"section\" styles={styles} {...props}>\n      <>{children}</>\n    </Tag>\n  );\n};\n\n/**\n * Article component\n * @param styles - styles for the article element\n * @param children - children of the article element\n * @param props - additional props for the article element\n * @returns an article element with children\n */\nexport const Article = ({ children, styles, ...props }: LandmarkProps) => {\n  return (\n    <Tag as=\"article\" styles={styles} {...props}>\n      <>{children}</>\n    </Tag>\n  );\n};\n","import React from \"react\";\n\nimport { Section, Main, Article, Aside } from \"./landmarks\";\nexport type MainProps = {\n  children: React.ReactNode;\n  sideBar?: React.ReactNode;\n  styles?: {};\n  classes?: string;\n};\n\n/**\n * The main content section of a page.\n * @param children - The content to be displayed in the main section.\n * @param sideBar - The content to be displayed in the sidebar section.\n * @param styles - Additional styles to be applied to the main section.\n * @param classes - Additional classes to be applied to the main section.\n * @example <PageMain>Content</PageMain>\n * @example <PageMain sideBar={<Sidebar/>}>Content</PageMain>\n * @returns The main content section of a page.\n */\nexport const PageMain = ({ children, sideBar, styles, classes }: MainProps) => {\n  return (\n    <Main styles={styles}>\n      <Section data-content>\n        <Article>{children}</Article>\n        <Aside>{sideBar}</Aside>\n      </Section>\n    </Main>\n  );\n};\n\nexport default PageMain;\nPageMain.displayName = \"Main\";\n","import React from \"react\";\nimport { Title, Text, Tag } from \"@fpkit/react\";\nimport { Header, Section } from \"./landmarks\";\n/** set types  */\nexport interface HeaderProps {\n  title?: React.ReactNode;\n  link?: string;\n  styles?: {};\n  linkLabel?: React.ReactNode;\n  description?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nexport type BaseProps = { children: React.ReactNode };\nexport const HeaderBase = ({ styles, children, ...props }: HeaderProps) => {\n  return (\n    <Header styles={styles} {...props}>\n      {children}\n    </Header>\n  );\n};\n\nexport function DefaultHeader({\n  title,\n  link,\n  linkLabel,\n  description,\n}: HeaderProps) {\n  return (\n    <>\n      <Title elm=\"h2\">\n        <>{title}</>\n      </Title>\n      {description && (\n        <Text elm=\"p\">\n          <>{description}</>\n        </Text>\n      )}\n      <Text elm=\"p\">\n        <Tag\n          as=\"a\"\n          href={link}\n          data-btn\n          data-variant=\"primary\"\n          data-style=\"pill\"\n        >\n          <>{linkLabel || \"Get Started\"}</>\n        </Tag>\n      </Text>\n    </>\n  );\n}\n\nexport const PageHeader = ({\n  title,\n  link,\n  linkLabel,\n  description,\n  styles,\n  children,\n}: HeaderProps) => {\n  if (!title) {\n    throw new Error(\"ThemeHeader requires a title prop\");\n  }\n  return (\n    <HeaderBase>\n      {children ? (\n        children\n      ) : (\n        <DefaultHeader\n          title={title}\n          link={link}\n          linkLabel={linkLabel}\n          description={description}\n        />\n      )}\n    </HeaderBase>\n  );\n};\nexport default PageHeader;\nPageHeader.displayName = \"Header\";\n","import React from \"react\";\nimport { Title } from \"@fpkit/react\";\nimport { Header, Main, Section } from \"./landmarks\";\nimport Nav from \"../nav/nav\";\nimport { PageFooter, ThemeFooterProps } from \"./page-footer\";\n\nexport type PageProps = {\n  children: React.ReactNode;\n  styles?: {};\n  title?: string;\n  description?: string;\n  keywords?: string;\n  image?: string;\n  url?: string;\n  type?: string;\n  author?: string;\n};\n\nexport const PG = ({ children }: Partial<PageProps>) => {\n  return <>{children}</>;\n};\n\n/**\n * Renders the page header component\n * @param {string} title - The title of the header\n * @param {object} styles - The styles to apply to the header\n * @param {React.ReactNode} children - The children to render inside the header\n * @param {PageProps} props - The page props object\n * @returns {JSX.Element} - The rendered page header component\n */\nexport const HeaderSection = ({\n  title = \"Header Title\",\n  styles,\n  children,\n  ...props\n}: Partial<PageProps>): JSX.Element => {\n  return (\n    <Header styles={styles} {...props}>\n      <Title elm=\"h2\">{title}</Title>\n      <>{children}</>\n    </Header>\n  );\n};\n/**\n * Renders the main section of the page\n * @param {React.ReactNode} children - The children to render inside the main section\n * @param {object} styles - The styles to apply to the main section\n * @param {PageProps} props - The page props object\n * @returns {JSX.Element} - The rendered main section component\n */\nexport const MainSection = ({\n  children,\n  styles,\n  ...props\n}: Partial<PageProps>): JSX.Element => {\n  return (\n    <Main styles={styles} {...props}>\n      <Section>{children}</Section>\n    </Main>\n  );\n};\n\n/**\n * Renders the footer section of the page\n * @param {ThemeFooterProps} props - The props object containing the copyInfo, orgName, styles, and children\n * @returns {JSX.Element} - The rendered footer section component\n */\nexport const FooterSection = ({\n  copyInfo,\n  orgName,\n  styles,\n  children,\n  ...props\n}: ThemeFooterProps): JSX.Element => {\n  return (\n    <PageFooter\n      styles={styles}\n      orgName={orgName}\n      copyInfo={copyInfo}\n      {...props}\n    >\n      {children}\n    </PageFooter>\n  );\n};\n\nexport const NavSection = ({\n  children,\n  styles,\n  ...props\n}: Partial<PageProps>): JSX.Element => {\n  return (\n    <Nav styles={styles} {...props}>\n      {children}\n    </Nav>\n  );\n};\n\n/**\n * Renders the header section of the page\n * @param {string} title - The title of the header\n * @param {object} styles - The styles to apply to the header\n * @param {React.ReactNode} children - The children to render inside the header\n * @param {PageProps} props - The page props object\n * @returns {JSX.Element} - The rendered header section component\n */\nPG.Header = HeaderSection;\n/**\n * Renders the main section of the page\n * @param {React.ReactNode} children - The children to render inside the main section\n * @param {object} styles - The styles to apply to the main section\n * @param {PageProps} props - The page props object\n * @returns {JSX.Element} - The rendered main section component\n */\nPG.Main = MainSection;\n/**\n * Renders the footer section of the page\n * @param {ThemeFooterProps} props - The props object containing the copyInfo, orgName, styles, and children\n * @example <Page.Footer copyInfo=\"© 2021\" orgName=\"My Org\" />\n * @returns {JSX.Element} - The rendered footer section component\n *\n */\nPG.Footer = FooterSection;\n/**\n * Renders the nav section of the page\n * @param {React.ReactNode} children - The children to render inside the nav section\n * @param {object} styles - The styles to apply to the nav section\n * @param {PageProps} props - The page props object\n * @returns {JSX.Element} - The rendered nav section component\n * @example\n * <Page.Nav>\n *  <Nav />\n * </Page.Nav>\n * @example\n * <Page.Nav styles={{ backgroundColor: \"red\" }}>\n * <Nav />\n * </Page.Nav>\n */\nPG.Nav = NavSection;\nexport default PG;\n","import React from \"react\";\nimport { Footer, Section } from \"./landmarks\";\n\n/**\n * Props for the PageFooter component\n */\nexport type ThemeFooterProps = {\n  children?: React.ReactNode;\n  copyInfo?: string;\n  orgName?: string;\n  styles?: {};\n};\n\n/**\n * The PageFooter component\n * @param orgName The name of the organization\n * @param copyInfo The copy information to display\n * @param styles The styles to apply to the component\n * @param children The child components to render\n * @example <PageFooter copyInfo=\"All rights reserved\" orgName=\"My Org\" />\n * @example <PageFooter copyInfo=\"All rights reserved\" orgName=\"My Org\"><p>Thank you for visiting our website! If you have any questions or comments, please don't hesitate to contact us.</p></PageFooter>\n * @returns The rendered PageFooter component\n */\nexport const PageFooter = ({\n  orgName = \"FPKit\",\n  copyInfo = \"All right reserved\",\n  styles,\n  children,\n  ...props\n}: ThemeFooterProps) => {\n  return (\n    <Footer styles={styles} {...props}>\n      {!!children && <Section>{children}</Section>}\n      <p>\n        {copyInfo} &copy; {orgName} {new Date().getFullYear()}\n      </p>\n    </Footer>\n  );\n};\n\nexport default PageFooter;\nPageFooter.displayName = \"ThemeFooter\";\n","import { PageOpts, MdxFile } from \"nextra\";\nimport { Article, Tag, Title, Link } from \"@fpkit/react\";\nimport React from \"react\";\n\nexport type listProps = Pick<PageOpts, \"pageMap\">;\n\nexport type PostsListProps = {\n  showDescription?: boolean;\n  elm?: \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  as?: \"article\" | \"li\";\n  postList?: MdxFile[];\n};\n\n/*\n * PostsList component\n *\n * Renders a list of posts.\n *\n * @param {PostsListProps} props - The props for the PostsList component.\n * @param {boolean} [props.showDescription=false] - Show post description.\n * @param {(\"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\")} [props.elm=\"h2\"] - Heading element.\n * @param {(\"article\" | \"li\")} [props.as=\"article\"] - Wrapper element.\n * @param {MdxFile[]} [props.postList] - List of posts.\n *\n * @returns {JSX.Element} - The PostsList component.\n */\nexport const PostsList = ({\n  showDescription = false,\n  elm = \"h2\",\n  as = \"article\",\n  postList,\n  ...props\n}: PostsListProps) => {\n  return (\n    <>\n      {postList?.map((item) => {\n        const { route } = item;\n        return (\n          <Tag as={as} key={React.useId()} {...props}>\n            {!!showDescription ? (\n              <Article styles={{ paddingBlock: \"1rem\" }}>\n                <Title elm={elm}>\n                  <Link href={route}>{item.frontMatter?.title}</Link>\n                </Title>\n                <p>{item.frontMatter?.description}</p>\n                <p>\n                  <Link\n                    href={route}\n                    data-btn\n                    data-variant=\"primary\"\n                    data-style=\"pill\"\n                  >\n                    Continue Reading\n                  </Link>\n                </p>\n                <hr />\n              </Article>\n            ) : (\n              <Link href={route}>{item.frontMatter?.title}</Link>\n            )}\n          </Tag>\n        );\n        return null;\n      })}\n    </>\n  );\n};\n\nexport default PostsList;\nPostsList.displayName = \"PostsList\";\n","import { Tag, Article, Title, Img, Link } from \"@fpkit/react\";\nimport React from \"react\";\n\nexport type ArticleListProps = {\n  description: string;\n  title: string;\n  route: string;\n  linkText?: string;\n  img?: string;\n  styles?: {};\n};\n\nexport const ArticleList = ({\n  title,\n  description,\n  linkText,\n  route,\n  img,\n  styles,\n}: ArticleListProps) => {\n  return (\n    <Article styles={styles}>\n      {!!img && (\n        <Link href={route} rel=\"Cover image\">\n          <Tag as=\"figure\">\n            <Img src={img} alt={title} width={820} height={320} />\n          </Tag>\n        </Link>\n      )}\n      <Title elm=\"h2\">\n        <Link href={route}>{title}</Link>\n      </Title>\n      <p>{description}</p>\n      <Tag>\n        <Link href={route} data-btn=\"pill\" data-variant=\"primary\">\n          {(linkText ??= \"Continue Reading\")}\n        </Link>\n      </Tag>\n    </Article>\n  );\n};\n\nexport default ArticleList;\nArticleList.displayName = \"ArticleList\";\n","import { getPagesUnderRoute, getAllPages } from \"nextra/context\";\nimport React from \"react\";\nimport { Page, MdxFile } from \"nextra\";\nimport { ArticleList } from \"./article-list\";\n\n/**\n * An object representing the data required to render a list of pages.\n */\nexport type PageListTypes = {\n  /**\n   * The group of pages to render.\n   */\n  group?: string;\n  /**\n   * An array of pages to render.\n   */\n  data: Page[];\n  /**\n   * An optional object containing custom styles to apply to the component.\n   */\n  styles?: {};\n};\n\n/*\n * PageList\n *\n * @param {PageListTypes} data - An object representing the data required to render a list of pages.\n * @param {string} [data.group] - The group of pages to render.\n * @param {Page[]} data.data - An array of pages to render.\n *\n * Renders a list of pages. If no pages are found, returns null.\n * Maps over the array of pages and renders an <ArticleList> component for each page.\n * @example <PageList data={pages} />\n */\nexport const PageList = ({ data, styles, ...props }: PageListTypes) => {\n  if (data.length <= 0) return null;\n\n  return (\n    <>\n      {data?.map((page) => (\n        <>\n          <ArticleList\n            key={page.route}\n            // @ts-ignore\n            title={page.frontMatter?.title}\n            route={page.route}\n            // @ts-ignore\n            description={page?.frontMatter?.description}\n            styles={styles}\n            {...props}\n          />\n          <hr />\n        </>\n      ))}\n    </>\n  );\n};\n\nexport default PageList;\n","import React from \"react\";\nimport { Tag } from \"@fpkit/react\";\n\n/**\n * @typedef TocTypes\n * @property {Array<any>} items\n * @property {React.ReactNode | string} children\n * @property {string} className\n */\nexport type TocTypes = {\n  items: Array<any>;\n  children?: React.ReactNode | string;\n  styles?: {};\n  dataStyles?: string;\n};\n\n/**\n * @typedef TocItemTypes\n * @property {number} depth\n * @property {string} value\n * @property {string} id\n */\nexport type TocItemTypes = {\n  depth: number;\n  value: string;\n  id: string;\n};\n\nexport const Toc = ({ items, styles, children, dataStyles }: TocTypes) => {\n  if (items.length <= 1) return null;\n  return (\n    <>\n      <div>\n        {children ?? <Tag as=\"h3\">Table of contents</Tag>}\n        <Tag as=\"ul\" styles={styles} data-fp-list={`unstyled ${dataStyles}`}>\n          {!!items &&\n            items.map((item: TocItemTypes) => (\n              <TocItems key={React.useId()} {...item} />\n            ))}\n        </Tag>\n      </div>\n    </>\n  );\n};\n\nexport const TocItems = ({ depth, value, id }: TocItemTypes) => {\n  return (\n    <li>\n      <a href={`#${id}`}>{value}</a>\n    </li>\n  );\n};\n\nexport default Toc;\nToc.displayName = \"Toc\";\n"]}