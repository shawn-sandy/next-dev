{"version":3,"sources":["../src/hooks/useOpts.tsx","../src/hooks/useConfig.tsx"],"names":["usePageOpts","options","pageOpts","pageMap","postList","item","pageList","dirList","latestPosts","filter_mdx_pages_default","pages","FilterPageType","jsx","components","children","useConfig","config"],"mappings":"gDAOO,IAAMA,EAAc,CAAC,CAAE,QAAAC,CAAQ,IAAiB,CACrD,GAAM,CAAE,SAAAC,CAAS,EAAID,EAEf,CAAE,QAAAE,CAAQ,EAAID,EAEpB,GAAI,CAACC,EACH,MAAO,CACL,YAAa,CAAC,EACd,SAAU,CAAC,EACX,MAAO,CAAC,EACR,SAAU,CAAC,EACX,YAAa,CAAC,EACd,MAAO,CAAC,CACV,EAGF,IAAMC,EAAWD,EAAQ,OACtBE,GACCA,EAAK,OAAS,WACdA,EAAK,QAAU,KACfA,EAAK,cAAgB,MACzB,EAEMC,EAA0BH,EAAQ,OACrCE,GACCA,EAAK,OAAS,WAAaA,EAAK,aAAa,OAAS,MAC1D,EAEME,EAAyBJ,EAAQ,OACpCE,GAAsBA,EAAK,OAAS,QACvC,EAEMG,EAAcC,EAAeN,CAAO,EACpCO,EAAQC,EAAeR,CAAO,EAEpC,MAAO,CAAE,QAAAI,EAAS,SAAAH,EAAU,SAAAE,EAAU,YAAAE,EAAa,MAAAE,CAAM,CAC3D,EC9BI,cAAAE,MAAA,oBAFJ,IAAMC,EAAa,CACjB,GAAKC,GACHF,EAAC,MACC,MAAO,CACL,qBAAsB,OACtB,oBAAqB,cACrB,eAAgB,OAChB,gBAAiB,wCACnB,EAEC,SAAAE,EACH,CAEJ,EAEaC,EAAY,CAAC,CAAE,OAAAC,CAAO,KACb,CAAE,WAAAH,CAAW","sourcesContent":["import { NextraThemeLayoutProps, PageMapItem } from \"nextra\";\nimport FilterMdxPages, { FilterPageType } from \"../libs/filter-mdx-pages\";\n\nexport type optsTypes = {\n  options: Pick<NextraThemeLayoutProps, \"pageOpts\">;\n};\n\nexport const usePageOpts = ({ options }: optsTypes) => {\n  const { pageOpts } = options;\n\n  const { pageMap } = pageOpts;\n\n  if (!pageMap) {\n    return {\n      contentDirs: [],\n      postList: [],\n      posts: [],\n      pageList: [],\n      latestPosts: [],\n      pages: [],\n    };\n  }\n\n  const postList = pageMap.filter(\n    (item: PageMapItem) =>\n      item.kind === \"MdxPage\" &&\n      item.route !== \"/\" &&\n      item.frontMatter !== undefined\n  );\n\n  const pageList: PageMapItem[] = pageMap.filter(\n    (item: PageMapItem) =>\n      item.kind === \"MdxPage\" && item.frontMatter?.type === \"page\"\n  );\n\n  const dirList: PageMapItem[] = pageMap.filter(\n    (item: PageMapItem) => item.kind === \"Folder\"\n  );\n\n  const latestPosts = FilterMdxPages(pageMap);\n  const pages = FilterPageType(pageMap);\n\n  return { dirList, postList, pageList, latestPosts, pages };\n};\n","import React from \"react\";\n\nexport type themeConfig = {\n  [key: string]: any;\n};\n\nexport type ThemeOptions = {\n  config: themeConfig | {};\n  children: React.ReactNode;\n};\n\nconst components = {\n  h1: (children: React.ReactNode) => (\n    <h1\n      style={{\n        WebkitBackgroundClip: \"text\",\n        WebkitTextFillColor: \"transparent\",\n        backgroundClip: \"text\",\n        backgroundImage: \"linear-gradient(90deg,#7928CA,#FF0080)\",\n      }}\n    >\n      {children}\n    </h1>\n  ),\n};\n\nexport const useConfig = ({ config }: ThemeOptions) => {\n  const ThemeConfig = { components };\n\n  return ThemeConfig;\n};\n"]}